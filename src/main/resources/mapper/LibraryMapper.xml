<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.readbook.Dao.LibraryMapper">
  <resultMap id="BaseResultMap" type="com.example.readbook.Model.Library">
    <id column="id_book" jdbcType="INTEGER" property="idBook" />
    <result column="name_book" jdbcType="VARCHAR" property="nameBook" />
    <result column="time_book" jdbcType="VARCHAR" property="timeBook" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="score" jdbcType="DOUBLE" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_book, name_book, time_book, author, introduce, picture, type, score
  </sql>
  <select id="selectByExample" parameterType="com.example.readbook.Model.LibraryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from library
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="All"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from library
  </select>
  <select id="page" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from library
    where id_book between #{page,jdbcType=INTEGER}*10-9 and #{page,jdbcType=INTEGER}*10
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from library
    where id_book = #{idBook,jdbcType=INTEGER}
  </select>
  <select id="selectByname" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from library
    where name_book = #{name ,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from library
    where id_book = #{idBook,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.readbook.Model.LibraryExample">
    delete from library
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.readbook.Model.Library">
    insert into library (id_book, name_book, time_book, 
      author, introduce, picture, 
      type, score)
    values (#{idBook,jdbcType=INTEGER}, #{nameBook,jdbcType=VARCHAR}, #{timeBook,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.readbook.Model.Library">
    insert into library
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idBook != null">
        id_book,
      </if>
      <if test="nameBook != null">
        name_book,
      </if>
      <if test="timeBook != null">
        time_book,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idBook != null">
        #{idBook,jdbcType=INTEGER},
      </if>
      <if test="nameBook != null">
        #{nameBook,jdbcType=VARCHAR},
      </if>
      <if test="timeBook != null">
        #{timeBook,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.readbook.Model.LibraryExample" resultType="java.lang.Long">
    select count(*) from library
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update library
    <set>
      <if test="record.idBook != null">
        id_book = #{record.idBook,jdbcType=INTEGER},
      </if>
      <if test="record.nameBook != null">
        name_book = #{record.nameBook,jdbcType=VARCHAR},
      </if>
      <if test="record.timeBook != null">
        time_book = #{record.timeBook,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update library
    set id_book = #{record.idBook,jdbcType=INTEGER},
      name_book = #{record.nameBook,jdbcType=VARCHAR},
      time_book = #{record.timeBook,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.readbook.Model.Library">
    update library
    <set>
      <if test="nameBook != null">
        name_book = #{nameBook,jdbcType=VARCHAR},
      </if>
      <if test="timeBook != null">
        time_book = #{timeBook,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
    </set>
    where id_book = #{idBook,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.readbook.Model.Library">
    update library
    set name_book = #{nameBook,jdbcType=VARCHAR},
      time_book = #{timeBook,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE}
    where id_book = #{idBook,jdbcType=INTEGER}
  </update>
</mapper>